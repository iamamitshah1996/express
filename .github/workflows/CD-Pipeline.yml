name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2 Staging
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          set -e

          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/hello-world:latest"
          CONTAINER_NAME="hello-world"
          BACKUP_NAME="${CONTAINER_NAME}_backup"

          echo "üîê Logging in to Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "üì¶ Pulling latest image..."
          docker pull $IMAGE_NAME

          echo "üîç Checking if container is running..."
          if docker ps -a --format '{{.Names}}' | grep -wq "$CONTAINER_NAME"; then
            echo "üõë Stopping and backing up current container..."
            docker stop $CONTAINER_NAME || true
            docker rename $CONTAINER_NAME $BACKUP_NAME || true
          fi

          echo "üöÄ Starting new container..."
          if docker run -d --name $CONTAINER_NAME -p 80:80 $IMAGE_NAME; then
            echo "‚úÖ New container started. Cleaning up backup..."
            docker rm $BACKUP_NAME || true
          else
            echo "‚ùå Deployment failed. Rolling back..."
            docker rm $CONTAINER_NAME || true
            docker rename $BACKUP_NAME $CONTAINER_NAME || true
            docker start $CONTAINER_NAME || true
            exit 1
          fi
