name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy-to-ec2:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Get short commit SHA
        run: echo "SHORT_SHA=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV

      - name: Trim SHA to 7 characters
        run: echo "SHA_TAG=${SHORT_SHA::7}" >> $GITHUB_ENV

      - name: Set Docker image tag
        run: echo "IMAGE=${{ secrets.DOCKER_USERNAME }}/hello-world:${{ env.SHA_TAG }}" >> $GITHUB_ENV

      - name: Deploy directly to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            echo "Logging into Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "Pulling image: ${{ env.IMAGE }}"
            docker pull ${{ env.IMAGE }} || { echo "❌ Image pull failed"; exit 1; }

            echo "Stopping and removing existing container..."
            docker stop hello-world || true
            docker rm hello-world || true

            echo "Backing up current latest image..."
            docker tag ${{ secrets.DOCKER_USERNAME }}/hello-world:latest ${{ secrets.DOCKER_USERNAME }}/hello-world:backup || true

            echo "Deploying new container..."
            if docker run -d --name hello-world -p 8080:8080 ${{ env.IMAGE }}; then
              echo "✅ Deployment successful"
              docker tag ${{ env.IMAGE }} ${{ secrets.DOCKER_USERNAME }}/hello-world:latest
            else
              echo "❌ Deployment failed. Rolling back..."
              docker run -d --name hello-world -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/hello-world:backup
              exit 1
            fi
